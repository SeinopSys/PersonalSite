{"version":3,"sources":["theme.scss","_vars.scss","_theme_dialog.scss","../../node_modules/bootstrap/scss/mixins/_breakpoints.scss"],"names":[],"mappings":"AAKQ,2GCsCR,YACI,OAAA,EACA,QAAA,KACA,WAAA,OACA,MAAA,KACA,mBAAA,WAAA,WAAA,WACA,UAAA,EAEA,iBACI,UAAA,KAEA,iCAHJ,iBAIQ,QAAA,MAEA,kCACI,cAAA,KAGR,iCAVJ,iBAWQ,QAAA,EAAA,IACA,QAAA,OAEA,kCACI,aAAA,IAAA,MAAA,sBChER,yDACI,WAAA,IAAA,MACA,YAAA,IACA,WAAA,IAGJ,uBACI,UAAA,KACA,QAAA,MACA,SAAA,KACA,UAAA,KACA,QAAA,IACA,OAAA,IAAA,EAAA,KACA,mBAAA,WAAA,WAAA,WACA,OAAA,EACA,cAAA,EACA,WAAA,KACA,YAAA,SACA,WAAA,OACA,UAAA,ODuDR,WAAA,KACA,MAAA,KAGI,0CACI,iBAAA,YACA,QAAA,EAEA,mDACI,MAAA,IAGJ,qDACI,OAAA,IAGR,iDACI,QAAA,KAEJ,gDACI,iBAAA,iBACA,OAAA,EAAA,IAEA,sDACI,iBAAA,iBAGJ,uDACI,iBAAA,iBChFJ,kCACI,cAAA,EAIR,qCACI,OAAA,KAAA,EAAA,EACA,QAAA,IAKZ,eACI,WAAA,OF9BJ,WACI,WAAA,OAGJ,aACI,QAAA,aACA,WAAA,iBAAA,UAAA,OACA,gBAAA,QACA,MAAA,KACA,OAAA,KACA,YAAA,KACA,OAAA,KACA,kBAAA,aAAA,UAAA,aACA,OAAA,IAAA,MAAA,KAIA,SAAA,MACI,aAAA,MAIR,EACI,QAAA,EAGJ,KACI,UAAA,KACA,OAAA,KACA,iBAAA,KAGJ,KACI,OAAA,EACA,mBAAA,WAAA,WAAA,WACA,YAAA,SAAA,CAAA,WAEA,WACI,WAAA,QAQR,oBACI,WAAA,OAGJ,qBACI,cAAA,EGeA,4BHZJ,qBAEQ,WAAA,MACA,WAAA,MAGJ,yCAEI,WAAA,OAKJ,wBACI,QAAA,EACA,OAAA,EACA,OAAA,OACA,kBAAA,UACA,oBAAA,OACA,gBAAA,QACA,iBAAA,wBACA,MAAA,KAIA,sCACI,QAAA,OACA,OAAA,KACA,aAAA,KAGJ,sCACI,QAAA,mBACA,MAAA,MACA,UAAA,KACA,YAAA,IACA,YAAA,IACA,eAAA,UAGJ,sCACI,QAAA,YAAA,QAAA,YAAA,QAAA,KACA,mBAAA,WAAA,sBAAA,OAAA,cAAA,IAAA,OAAA,UAAA,IAAA,OACA,kBAAA,OAAA,eAAA,OAAA,YAAA,OAKJ,sCACI,OAAA,MACA,QAAA,OACA,eAAA,OACA,cAAA,IACA,aAAA,MAMR,wBACI,WAAA,EAGJ,uBACI,cAAA,EAIR,sBACI,YAAA,IAGJ,aACI,SAAA,MACA,MAAA,KACA,OAAA,KACA,QAAA,EACA,QAAA,MACA,UAAA,QAGJ,sBACI,QAAA,aACA,YAAA,IACA,cAAA,IAAA,OACA,OAAA","file":"../sass/theme.css","sourcesContent":["@import \"vars\";\n@import \"../../node_modules/bootstrap/scss/functions\";\n@import \"../../node_modules/bootstrap/scss/variables\";\n@import \"../../node_modules/bootstrap/scss/mixins\";\n@import \"theme_dialog\";\n@import url('https://fonts.googleapis.com/css?family=Catamaran:400,700&subset=latin-ext,latin&display=swap');\n\n.invisible {\n    visibility: hidden\n}\n\n.js-required {\n    display: inline-block;\n    background: url('/img/js.svg') no-repeat center;\n    background-size: contain;\n    width: .8em;\n    height: .8em;\n    margin-left: .3em;\n    cursor: help;\n    transform: rotate(5deg);\n    border: 1px solid black;\n}\n\na, .btn {\n    .fa {\n        margin-right: .3rem;\n    }\n}\n\n* {\n    outline: none;\n}\n\nhtml {\n    font-size: 100%;\n    height: 100%;\n    background-color: #fff;\n}\n\nbody {\n    margin: 0;\n    box-sizing: border-box;\n    font-family: $font-family;\n\n    #wrap {\n        background: #678ecb;\n    }\n\n    > footer {\n        @extend %footer\n    }\n}\n\n.pagination-wrapper {\n    text-align: center;\n}\n\n.alert-out-of-bounds {\n    margin-bottom: 0;\n}\n\nnav.navbar.fixed-top {\n    @include media-breakpoint-down(md) {\n        max-height: 100vh;\n        overflow-y: auto;\n    }\n\n    + :not(.start-at-top) {\n        // height + border\n        margin-top: $nav-link-height + ($navbar-padding-y * 2);\n    }\n}\n\nnav {\n    .navbar-brand[href] {\n        padding: 0;\n        margin: 0;\n        height: $nav-link-height;\n        background-repeat: no-repeat;\n        background-position: center;\n        background-size: contain;\n        background-image: url('/img/logo-dark.svg');\n        width: 2.8 * $nav-link-height;\n    }\n\n    .language-selector {\n        .language-flag {\n            display: inline;\n            height: 12px;\n            margin-right: .5em;\n        }\n\n        .current:after {\n            content: attr(data-current);\n            color: green;\n            font-size: .7em;\n            margin-left: 5px;\n            font-weight: bold;\n            text-transform: uppercase;\n        }\n\n        .dropdown-item {\n            display: flex;\n            flex-flow: row nowrap;\n            align-items: center;\n        }\n    }\n\n    .dropdown.user-dropdown {\n        .gravatar {\n            height: 1.4em;\n            display: inline;\n            vertical-align: middle;\n            border-radius: 50%;\n            margin-right: .3rem;\n        }\n    }\n}\n\n.card-body > {\n    :first-child {\n        margin-top: 0;\n    }\n\n    :last-child {\n        margin-bottom: 0;\n    }\n}\n\n.custom-control-label {\n    line-height: 1.7;\n}\n\n#copy-notify {\n    position: fixed;\n    right: 10px;\n    bottom: 10px;\n    opacity: 0;\n    z-index: 22000;\n    font-size: 1.75rem;\n}\n\ntime[datetime][title] {\n    display: inline-block;\n    line-height: 1em;\n    border-bottom: 1px dotted;\n    cursor: help;\n}\n","$VinyManeBlue: #36c;\n$VinyManeTurq: #0EE;\n$Favcolor: #68b;\n$GlobalBorderRadius: 5px;\n$GlobalBorderColor: darken($VinyManeBlue, 10);\n$GlobalBGColor: #fff;\n$BGGradTop: $VinyManeBlue;\n$BGGradBot: darken($VinyManeBlue, 20);\n$font-family: 'Catamaran', sans-serif;\n\n@mixin container {\n    border-radius: $GlobalBorderRadius;\n    background-color: $GlobalBGColor;\n    box-sizing: border-box;\n    padding: 10px;\n}\n\n$Link: #1A1F61;\n$LinkColor: #2E66A7;\n$LinkHoverColor: lighten($LinkColor, 15);\n\n// Notices & buttons\n$NBlue: #07f;\n$NBlueBG: #def;\n$NDarkBlue: #04b;\n$NDarkBlueBG: #ddf;\n$NTeal: #09a;\n$NTealBG: #dff;\n$NGreen: #090;\n$NGreenBG: #dfd;\n$NRed: #d00;\n$NRedBG: #fdd;\n$NOrange: #d50;\n$NOrangeBG: #fed;\n$NYellow: #b70;\n$NYellowBG: #ffd;\n\n$Breakpoint: 768px;\n\n// Bootstrap\n$font-family-monospace: 'Source Code Pro Semibold', 'Consolas', monospace;\n$code-color: $NYellow;\n\n%footer {\n    bottom: 0;\n    padding: 10px;\n    text-align: center;\n    width: 100%;\n    box-sizing: border-box;\n    font-size: 0;\n\n    > span {\n        font-size: 1rem;\n\n        @media all and (max-width: $Breakpoint) {\n            display: block;\n\n            &:not(:last-child) {\n                margin-bottom: 5px;\n            }\n        }\n        @media all and (min-width: $Breakpoint) {\n            padding: 0 7px;\n            display: inline;\n\n            &:not(:last-child) {\n                border-right: 1px solid rgba(gray, .5);\n            }\n        }\n    }\n}\n\n\n$NoScrollbar: false;\n@mixin l33th4x($scrollbar:true) {\n    $Lime: #0c0;\n    background: #000;\n    color: $Lime;\n\n    @if ($scrollbar == true) {\n        &::-webkit-scrollbar {\n            background-color: transparent;\n            padding: 0;\n\n            &:vertical {\n                width: 7px\n            }\n\n            &:horizontal {\n                height: 7px\n            }\n        }\n        &::-webkit-scrollbar-button {\n            display: none\n        }\n        &::-webkit-scrollbar-thumb {\n            background-color: rgba($Lime, .7);\n            margin: 0 2px;\n\n            &:hover {\n                background-color: rgba($Lime, .8)\n            }\n\n            &:active {\n                background-color: rgba($Lime, .9)\n            }\n        }\n    }\n}\n\n%checker-background {\n    background: url('/img/transparency.svg') repeat;\n    background-size: 16px;\n}\n","#dialogContent {\n    > div {\n        &:not(:first-child):not(#dialogButtons) {\n            border-top: 1px solid;\n            padding-top: 5px;\n            margin-top: 4px;\n        }\n\n        > pre {\n            max-width: 100%;\n            display: block;\n            overflow: auto;\n            font-size: 12px;\n            padding: 3px;\n            margin: 5px 0 10px;\n            box-sizing: border-box;\n            border: 0;\n            border-radius: 0;\n            max-height: 20em;\n            white-space: pre-wrap;\n            word-break: normal;\n            word-wrap: normal;\n            @include l33th4x;\n\n            &:last-child {\n                margin-bottom: 0\n            }\n        }\n\n        .alert:last-child {\n            margin: 10px 0 0;\n            padding: 7px;\n        }\n    }\n}\n\n#dialogButtons {\n    text-align: center;\n}\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $next: breakpoint-next($name, $breakpoints);\n  @return if($next, breakpoint-min($next, $breakpoints) - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n"]}