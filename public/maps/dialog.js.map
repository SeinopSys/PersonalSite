{"version":3,"sources":["dialog.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_defineProperty","key","value","Object","defineProperty","enumerable","configurable","writable","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","_createClass","protoProps","staticProps","_classPrivateMethodGet","receiver","privateSet","fn","has","$","undefined","colors","fail","success","wait","request","confirm","info","noticeClasses","yiq","danger","primary","warning","defaultTitles","window","Laravel","dialog","defaultContent","$modalElement","mk","attr","class","tabindex","role","aria-labelledby","id","html","Dialog","this","_display","add","$dialogOverlay","$dialogContent","$dialogHeader","$dialogBox","$dialogButtons","_open","_closeButton","close","_$focusedElement","title","content","force_new","_display2","call","buttons","callback","btnobj","isArray","each","_","$el","trigger","additional_info","capitalize","confirmBtn","formid","classScope","jQuery","match","submit","form","cancel","action","btnTextArray","handlerFunc","b","yes","no","$focus","last","focus","$inputs","find","filter","$actions","children","first","type","disable","addClass","removeClass","enable","isOpen","callCallback","modal","one","remove","_restoreFocus","regexp","$notice","test","hide","hasClass","_controlInputs","WeakSet","_this","$requestContentDiv","params","color","append","Boolean","$contentAdd","appendingToRequest","includes","_storeFocus","clone","appendTo","$body","$ErrorNotice","show","empty","parent","concat","name","$button","on","prepend","text","e","Key","Enter","Space","keyCode","preventDefault","Tab","LeftArrow","RightArrow","$dBc","$focused","isKey","shiftKey","prev","next","backdrop","keyboard","_setFocus","Time","update","$lastdiv","stop","animate","scrollTop","position","top","parseFloat","css","idx","index","$parent","is","eq"],"mappings":"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","file":"../js/dialog.js","sourcesContent":["/* globals $body,Key,$w,Time */\n(function ($, undefined) {\n    'use strict';\n    let colors = {\n            fail: 'danger',\n            success: 'success',\n            wait: 'info',\n            request: 'primary',\n            confirm: 'warning',\n            info: 'info'\n        },\n        noticeClasses = {\n            fail: 'danger',\n            success: 'success',\n            wait: 'info',\n            request: 'primary',\n            confirm: 'warning',\n            info: 'info',\n        },\n        yiq = {\n            danger: 'white',\n            success: 'white',\n            info: 'white',\n            primary: 'white',\n            warning: 'dark',\n        },\n        defaultTitles = window.Laravel.dialog.defaultTitles,\n        defaultContent = window.Laravel.dialog.defaultContent;\n\n    let $modalElement = $.mk('div').attr({\n        'class': 'modal fade',\n        tabindex: -1,\n        role: 'dialog',\n        'aria-labelledby': 'dialogHeader',\n        id: 'dialogOverlay',\n    }).html(\n        `<div class=\"modal-dialog\" role=\"document\" id=\"dialogBox\">\n\t\t\t<div class=\"modal-content\">\n\t\t\t\t<div class=\"modal-header\">\n\t\t\t\t\t<h4 class=\"modal-title\" id=\"dialogHeader\"></h4>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"modal-body\" id=\"dialogContent\"></div>\n\t\t\t\t<div class=\"modal-footer\" id=\"dialogButtons\"></div>\n\t\t\t</div>\n\t\t</div>`\n    );\n\n    class Dialog {\n        constructor() {\n            this.$dialogOverlay = $('#dialogOverlay');\n            this.$dialogContent = $('#dialogContent');\n            this.$dialogHeader = $('#dialogHeader');\n            this.$dialogBox = $('#dialogBox');\n            this.$dialogButtons = $('#dialogButtons');\n            this._open = this.$dialogContent.length ? {} : undefined;\n            this._closeButton = {\n                [window.Laravel.dialog.close]: function () {\n                    $.Dialog.close()\n                }\n            };\n            this._$focusedElement = undefined;\n        }\n\n        isOpen() {\n            return typeof this._open === 'object'\n        }\n\n        #display(type, title, content, buttons, callback) {\n            if (typeof type !== 'string' || typeof colors[type] === 'undefined')\n                throw new TypeError('Invalid dialog type: ' + typeof type);\n\n            if (typeof buttons === 'function' && typeof callback !== 'function') {\n                callback = buttons;\n                buttons = undefined;\n            }\n            let force_new = false;\n            if (typeof callback === 'boolean') {\n                force_new = callback;\n                callback = undefined;\n            } else if (typeof buttons === 'boolean' && typeof callback === 'undefined') {\n                force_new = buttons;\n                buttons = undefined;\n            }\n\n            if (typeof title === 'undefined')\n                title = defaultTitles[type];\n            else if (title === false)\n                title = undefined;\n            if (!content)\n                content = defaultContent[type];\n            let params = {\n                type: type,\n                title: title,\n                content: content || defaultContent[type],\n                buttons: buttons,\n                color: colors[type]\n            };\n\n            let append = Boolean(this._open),\n                $contentAdd = $.mk('div').append(params.content),\n                appendingToRequest = append && this._open.type === 'request' && ['fail', 'wait'].includes(params.type) && !force_new,\n                $requestContentDiv;\n\n            if (!append) {\n                this._storeFocus();\n                $modalElement.clone().appendTo($body);\n            }\n            if (appendingToRequest) {\n                $requestContentDiv = this.$dialogContent.children(':not(#dialogButtons)').last();\n                let $ErrorNotice = $requestContentDiv.children('.notice:last-child');\n                if (!$ErrorNotice.length) {\n                    $ErrorNotice = $.mk('div').append($.mk('p'));\n                    $requestContentDiv.append($ErrorNotice);\n                } else $ErrorNotice.show();\n                $ErrorNotice\n                    .attr('class', 'alert alert-' + noticeClasses[params.type])\n                    .children('p').html(params.content).show();\n                this._controlInputs(params.type === 'wait');\n            } else {\n                this._open = params;\n                this.$dialogOverlay = $('#dialogOverlay');\n                this.$dialogContent = $('#dialogContent');\n                this.$dialogHeader = $('#dialogHeader');\n                if (typeof params.title === 'string')\n                    this.$dialogHeader.html(params.title);\n                this.$dialogBox = $('#dialogBox');\n                this.$dialogButtons = $('#dialogButtons').empty();\n                this._controlInputs(true);\n                this.$dialogContent.append($contentAdd);\n\n                this.$dialogButtons[params.buttons ? 'show' : 'hide']();\n            }\n\n            if (!appendingToRequest)\n                this.$dialogHeader.parent().attr('class', 'modal-header' + (params.color ? ` bg-${params.color} text-${yiq[params.color]}` : ''));\n\n            if (!appendingToRequest && params.buttons) $.each(params.buttons, (name, obj) => {\n                let $button = $.mk('button').attr({\n                    'type': 'button',\n                    'class': 'btn btn-' + params.color\n                });\n                if (typeof obj === 'function')\n                    obj = {action: obj};\n                else if (obj.form) {\n                    $requestContentDiv = $(`#${obj.form}`);\n                    if ($requestContentDiv.length === 1) {\n                        $button.on('click', function () {\n                            $requestContentDiv.find('input[type=submit]').first().trigger('click');\n                        });\n                        $requestContentDiv.prepend($.mk('input').attr('type', 'submit').hide());\n                    }\n                }\n                $button.text(name).on('keydown', e => {\n                    if ([Key.Enter, Key.Space].includes(e.keyCode)) {\n                        e.preventDefault();\n\n                        $button.trigger('click');\n                    } else if ([Key.Tab, Key.LeftArrow, Key.RightArrow].includes(e.keyCode)) {\n                        e.preventDefault();\n\n                        let $dBc = this.$dialogButtons.children(),\n                            $focused = $dBc.filter(':focus'),\n                            $inputs = this.$dialogContent.find(':input');\n\n                        if ($.isKey(Key.LeftArrow, e))\n                            e.shiftKey = true;\n\n                        if ($focused.length) {\n                            if (!e.shiftKey) {\n                                if ($focused.next().length) $focused.next().focus();\n                                else if ($.isKey(Key.Tab, e)) $inputs.add($dBc).filter(':visible').first().focus();\n                            } else {\n                                if ($focused.prev().length) $focused.prev().focus();\n                                else if ($.isKey(Key.Tab, e)) ($inputs.length > 0 ? $inputs : $dBc).filter(':visible').last().focus();\n                            }\n                        } else $inputs.add($dBc)[!e.shiftKey ? 'first' : 'last']().focus();\n                    }\n                }).on('click', e => {\n                    e.preventDefault();\n\n                    $.callCallback(obj.action, [e]);\n                });\n                this.$dialogButtons.append($button);\n            });\n            this.$dialogOverlay.modal({\n                backdrop: 'static',\n                keyboard: false,\n            });\n            this.$dialogOverlay.one('shown.bs.modal', () => {\n                this._setFocus();\n                Time.update();\n\n                $.callCallback(callback, [$requestContentDiv]);\n                if (append) {\n                    let $lastdiv = this.$dialogContent.children().last();\n                    if (appendingToRequest)\n                        $lastdiv = $lastdiv.children('.notice').last();\n                    this.$dialogOverlay.stop().animate(\n                        {\n                            scrollTop: '+=' +\n                                ($lastdiv.position().top + parseFloat($lastdiv.css('margin-top'), 10) + parseFloat($lastdiv.css('border-top-width'), 10))\n                        },\n                        'fast'\n                    );\n                }\n            });\n\n        }\n\n        fail(title, content, force_new) {\n            this.#display('fail', title, content, this._closeButton, force_new === true);\n        }\n\n        success(title, content, buttons, callback) {\n            let btnobj;\n            if (buttons === true)\n                btnobj = this._closeButton;\n            else if ($.isArray(buttons)) {\n                btnobj = {};\n                $.each(buttons, function (_, $el) {\n                    (function ($el) {\n                        btnobj[$el.html()] = function () {\n                            $el.trigger('click');\n                        };\n                    })($el);\n                });\n            }\n            this.#display('success', title, content, btnobj, callback);\n        }\n\n        wait(title, additional_info, force_new) {\n            if (typeof additional_info === 'boolean' && typeof force_new === 'undefined') {\n                force_new = additional_info;\n                additional_info = undefined;\n            }\n            if (typeof additional_info !== 'string')\n                additional_info = defaultContent.wait;\n            this.#display('wait', title, $.capitalize(additional_info) + '&hellip;', force_new === true);\n        }\n\n        request(title, content, confirmBtn, callback) {\n            if (typeof confirmBtn === 'function' && typeof callback === 'undefined') {\n                callback = confirmBtn;\n                confirmBtn = undefined;\n            }\n            let buttons = {},\n                formid,\n                classScope = this;\n            if (content instanceof jQuery)\n                formid = content.attr('id');\n            else if (typeof content === 'string') {\n                let match = content.match(/<form\\sid=[\"']([^\"']+)[\"']/);\n                if (match)\n                    formid = match[1];\n            }\n            if (confirmBtn !== false) {\n                if (formid)\n                    buttons[confirmBtn || window.Laravel.dialog.submit] = {\n                        submit: true,\n                        form: formid,\n                    };\n                buttons[window.Laravel.dialog.cancel] = function () {\n                    classScope.close()\n                };\n            } else buttons[window.Laravel.dialog.close] = {\n                action: function () {\n                    classScope.close()\n                },\n                form: formid,\n            };\n\n            this.#display('request', title, content, buttons, callback);\n        }\n\n        confirm(title, content, btnTextArray, handlerFunc) {\n            if (typeof btnTextArray === 'function' && typeof handlerFunc === 'undefined')\n                handlerFunc = btnTextArray;\n\n            let classScope = this;\n            if (typeof handlerFunc !== 'function')\n                handlerFunc = function (b) {\n                    if (b) classScope.close()\n                };\n\n            if (!$.isArray(btnTextArray))\n                btnTextArray = [window.Laravel.dialog.yes, window.Laravel.dialog.no];\n            let buttons = {};\n            buttons[btnTextArray[0]] = function () {\n                handlerFunc(true)\n            };\n            buttons[btnTextArray[1]] = function () {\n                handlerFunc(false);\n                classScope.close()\n            };\n            this.#display('confirm', title, content, buttons);\n        }\n\n        info(title, content, callback) {\n            this.#display('info', title, content, this._closeButton, callback);\n        }\n\n        setFocusedElement($el) {\n            if ($el instanceof jQuery)\n                this._$focusedElement = $el;\n        }\n\n        _storeFocus() {\n            if (typeof this._$focusedElement !== 'undefined' && this._$focusedElement instanceof jQuery)\n                return;\n            let $focus = $(':focus');\n            this._$focusedElement = $focus.length > 0 ? $focus.last() : undefined;\n        }\n\n        _restoreFocus() {\n            if (typeof this._$focusedElement !== 'undefined' && this._$focusedElement instanceof jQuery) {\n                this._$focusedElement.focus();\n                this._$focusedElement = undefined;\n            }\n        }\n\n        _setFocus() {\n            let $inputs = this.$dialogContent.find('input,select,textarea').filter(':visible'),\n                $actions = this.$dialogButtons.children();\n            if ($inputs.length > 0)\n                $inputs.first().focus();\n            else if ($actions.length > 0 && this._open.type !== 'info')\n                $actions.first().focus();\n        }\n\n        _controlInputs(disable) {\n            let $inputs = this.$dialogContent\n                .children(':not(#dialogButtons)')\n                .last()\n                .add(this.$dialogButtons)\n                .find('input, button, select, textarea');\n\n            if (disable)\n                $inputs.filter(':not(:disabled)').addClass('temp-disable').disable();\n            else $inputs.filter('.temp-disable').removeClass('temp-disable').enable();\n        }\n\n        close(callback) {\n            if (!this.isOpen())\n                return $.callCallback(callback, false);\n\n            let classScope = this;\n            this.$dialogOverlay.modal('hide').one('hidden.bs.modal', function () {\n                classScope.$dialogOverlay.remove();\n                classScope._open = undefined;\n                classScope._restoreFocus();\n                $.callCallback(callback);\n            });\n        }\n\n        clearNotice(regexp) {\n            let $notice = this.$dialogContent.children(':not(#dialogButtons)').children('.notice:last-child');\n            if (!$notice.length)\n                return false;\n\n            if (typeof regexp === 'undefined' || regexp.test($notice.html())) {\n                $notice.hide();\n                if ($notice.hasClass('info'))\n                    this._controlInputs(false);\n                return true;\n            }\n            return false;\n        }\n    }\n\n    $.Dialog = new Dialog();\n\n    $body.on('keydown', function (e) {\n        if (!$.Dialog.isOpen() || e.keyCode !== Key.Tab)\n            return true;\n\n        let $inputs = $.Dialog.$dialogContent.find(':input'),\n            $focused = $inputs.filter(e.target),\n            idx = $inputs.index($focused);\n\n        if ($focused.length === 0) {\n            e.preventDefault();\n            $inputs.first().focus();\n        } else if (e.shiftKey) {\n            if (idx === 0) {\n                e.preventDefault();\n                $.Dialog.$dialogButtons.find(':last').focus();\n            } else {\n                let $parent = $focused.parent();\n                if (!$parent.is($.Dialog.$dialogButtons))\n                    return true;\n                if ($parent.children().first().is($focused)) {\n                    e.preventDefault();\n                    $inputs.eq($inputs.index($focused) - 1).focus();\n                }\n            }\n        }\n    });\n})(jQuery);\n"]}